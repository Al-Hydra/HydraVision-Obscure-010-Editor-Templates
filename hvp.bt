//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: HydraBladeZ
//   Version: 0.1
//   Purpose: Parse Hydravision hvp archives
//  Category: HydraVision
// File Mask: *.hvp
//  ID Bytes: 00 00 04 00
//   History: 
//------------------------------------------------
LittleEndian();
uint Signature;

FSkip(4);

uint EntryCount;

uint DirectoryCRC32 <format = hex>;

local int e;
//local string Name;
struct{
    for (e; e<EntryCount; e++)
    {
        struct{
            uint EntryNameCRC32 <format = hex>;
            uint EntryType;
            
            if (EntryType == 4)
            {
                uint64 Padding;
                uint SubEntryCount;
                uint FirstEntryIndex;
                local string FileName = "";
            }
            else
            {
                short Unknown;
                short unk;
                uint UncompressedSize;
                uint Offset;
                uint CompressedSize;
                
                local int Pos = FTell();
                FSeek(Offset);
                /*uint unk1;
                uint unk2;
                uint unk3;
                byte unk4;
                byte StringLength;
                char FileName[StringLength];*/
                byte FileData[CompressedSize];
                FSeek(Pos);
                
            }
        }Entry <read = Str("(%s)",GetEntryType(EntryType))>;
    }
}Entries;

string GetEntryType(uint & value)
{
    switch(value)
    {
        case 0:
        return "Uncompressed";
        
        case 1:
        return "Compressed";
        
        case 4:
        return "Directory";
        
    }
    
}

